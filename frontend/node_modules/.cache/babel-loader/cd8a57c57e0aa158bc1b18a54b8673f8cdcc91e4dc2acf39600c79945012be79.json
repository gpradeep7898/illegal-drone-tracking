{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepgatti/Desktop/IllegalDroneTracking/illegal-drone-tracking/frontend/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport DroneMap from \"./DroneMap\";\nimport DroneUpdates from \"./DroneUpdates\";\nimport DroneValidation from \"./DroneValidation\";\n//import \"./App.css\"; // Optional: your global styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Centralized state for drone data, restricted zones, and last update time\n  const [droneData, setDroneData] = useState([]);\n  const [restrictedZones, setRestrictedZones] = useState([]);\n  const [lastUpdated, setLastUpdated] = useState(\"\");\n  const socketRef = useRef(null);\n\n  // Helper to generate random drones; if forceUnauthorized is true, all drones will be flagged as unauthorized\n  const generateRandomDrones = (count, forceUnauthorized = false) => {\n    const drones = [];\n    for (let i = 0; i < count; i++) {\n      drones.push({\n        callsign: `SIM-${i + 1}`,\n        latitude: getRandomInRange(25, 49),\n        // US latitude range\n        longitude: getRandomInRange(-125, -67),\n        // US longitude range\n        altitude: getRandomInRange(100, 3000),\n        velocity: getRandomInRange(30, 200),\n        unauthorized: forceUnauthorized ? true : Math.random() < 0.4,\n        reason: forceUnauthorized ? \"Simulated: Restricted Zone\" : \"\"\n      });\n    }\n    return drones;\n  };\n\n  // Helper to generate a random number between min and max\n  const getRandomInRange = (min, max) => {\n    return parseFloat((Math.random() * (max - min) + min).toFixed(6));\n  };\n  useEffect(() => {\n    // Fetch real drone data from the server\n    const fetchDroneData = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/fetch-drones-live\");\n        const data = await response.json();\n        let realDrones = data.drones || [];\n        // Check how many drones are flagged unauthorized\n        const unauthorizedCount = realDrones.filter(d => d.unauthorized).length;\n        // If none are unauthorized, generate 5 random unauthorized drones\n        if (unauthorizedCount === 0) {\n          const randomUnauthorized = generateRandomDrones(5, true);\n          realDrones = realDrones.concat(randomUnauthorized);\n        }\n        setDroneData(realDrones);\n        setLastUpdated(new Date().toLocaleTimeString());\n      } catch (error) {\n        console.error(\"Error fetching drone data:\", error);\n        // Fallback: generate 10 random drones and add 5 forced unauthorized if needed\n        let fallback = generateRandomDrones(10);\n        const unauthorizedCount = fallback.filter(d => d.unauthorized).length;\n        if (unauthorizedCount === 0) {\n          const randomUnauthorized = generateRandomDrones(5, true);\n          fallback = fallback.concat(randomUnauthorized);\n        }\n        setDroneData(fallback);\n        setLastUpdated(new Date().toLocaleTimeString());\n      }\n    };\n\n    // Fetch restricted zones from the server\n    const fetchRestrictedZones = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/restricted-zones\");\n        const data = await response.json();\n        setRestrictedZones(data.restricted_zones || []);\n      } catch (error) {\n        console.error(\"Error fetching restricted zones:\", error);\n        setRestrictedZones([]);\n      }\n    };\n\n    // Initial data fetches\n    fetchDroneData();\n    fetchRestrictedZones();\n\n    // Set up WebSocket connection for live updates\n    socketRef.current = new WebSocket(\"ws://127.0.0.1:8000/ws\");\n    socketRef.current.onopen = () => {\n      console.log(\"✅ WebSocket Connected\");\n    };\n    socketRef.current.onmessage = event => {\n      try {\n        const receivedData = JSON.parse(event.data);\n        if (receivedData.drones && Array.isArray(receivedData.drones)) {\n          let updatedDrones = receivedData.drones;\n          const unauthorizedCount = updatedDrones.filter(d => d.unauthorized).length;\n          if (unauthorizedCount === 0) {\n            const randomUnauthorized = generateRandomDrones(5, true);\n            updatedDrones = updatedDrones.concat(randomUnauthorized);\n          }\n          setDroneData(updatedDrones);\n          setLastUpdated(new Date().toLocaleTimeString());\n        } else {\n          console.warn(\"⚠️ Unexpected WebSocket Data Format:\", receivedData);\n        }\n      } catch (error) {\n        console.error(\"❌ WebSocket Error Parsing Data:\", event.data);\n      }\n    };\n    socketRef.current.onerror = error => {\n      console.error(\"❌ WebSocket Error:\", error);\n    };\n    socketRef.current.onclose = () => {\n      console.warn(\"⚠️ WebSocket Disconnected. Reconnecting...\");\n      setTimeout(() => {\n        socketRef.current = new WebSocket(\"ws://127.0.0.1:8000/ws\");\n      }, 10000);\n    };\n\n    // Cleanup on unmount\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Airspace Security Monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DroneMap, {\n      droneData: droneData,\n      restrictedZones: restrictedZones,\n      lastUpdated: lastUpdated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DroneUpdates, {\n      droneData: droneData,\n      lastUpdated: lastUpdated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DroneValidation, {\n      droneData: droneData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rlDgHZvZEpmrqtbUdKbSFkVGoS8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","DroneMap","DroneUpdates","DroneValidation","jsxDEV","_jsxDEV","App","_s","droneData","setDroneData","restrictedZones","setRestrictedZones","lastUpdated","setLastUpdated","socketRef","generateRandomDrones","count","forceUnauthorized","drones","i","push","callsign","latitude","getRandomInRange","longitude","altitude","velocity","unauthorized","Math","random","reason","min","max","parseFloat","toFixed","fetchDroneData","response","fetch","data","json","realDrones","unauthorizedCount","filter","d","length","randomUnauthorized","concat","Date","toLocaleTimeString","error","console","fallback","fetchRestrictedZones","restricted_zones","current","WebSocket","onopen","log","onmessage","event","receivedData","JSON","parse","Array","isArray","updatedDrones","warn","onerror","onclose","setTimeout","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pradeepgatti/Desktop/IllegalDroneTracking/illegal-drone-tracking/frontend/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport DroneMap from \"./DroneMap\";\nimport DroneUpdates from \"./DroneUpdates\";\nimport DroneValidation from \"./DroneValidation\";\n//import \"./App.css\"; // Optional: your global styles\n\nconst App = () => {\n  // Centralized state for drone data, restricted zones, and last update time\n  const [droneData, setDroneData] = useState([]);\n  const [restrictedZones, setRestrictedZones] = useState([]);\n  const [lastUpdated, setLastUpdated] = useState(\"\");\n  const socketRef = useRef(null);\n\n  // Helper to generate random drones; if forceUnauthorized is true, all drones will be flagged as unauthorized\n  const generateRandomDrones = (count, forceUnauthorized = false) => {\n    const drones = [];\n    for (let i = 0; i < count; i++) {\n      drones.push({\n        callsign: `SIM-${i + 1}`,\n        latitude: getRandomInRange(25, 49),     // US latitude range\n        longitude: getRandomInRange(-125, -67), // US longitude range\n        altitude: getRandomInRange(100, 3000),\n        velocity: getRandomInRange(30, 200),\n        unauthorized: forceUnauthorized ? true : Math.random() < 0.4,\n        reason: forceUnauthorized ? \"Simulated: Restricted Zone\" : \"\",\n      });\n    }\n    return drones;\n  };\n\n  // Helper to generate a random number between min and max\n  const getRandomInRange = (min, max) => {\n    return parseFloat((Math.random() * (max - min) + min).toFixed(6));\n  };\n\n  useEffect(() => {\n    // Fetch real drone data from the server\n    const fetchDroneData = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/fetch-drones-live\");\n        const data = await response.json();\n        let realDrones = data.drones || [];\n        // Check how many drones are flagged unauthorized\n        const unauthorizedCount = realDrones.filter((d) => d.unauthorized).length;\n        // If none are unauthorized, generate 5 random unauthorized drones\n        if (unauthorizedCount === 0) {\n          const randomUnauthorized = generateRandomDrones(5, true);\n          realDrones = realDrones.concat(randomUnauthorized);\n        }\n        setDroneData(realDrones);\n        setLastUpdated(new Date().toLocaleTimeString());\n      } catch (error) {\n        console.error(\"Error fetching drone data:\", error);\n        // Fallback: generate 10 random drones and add 5 forced unauthorized if needed\n        let fallback = generateRandomDrones(10);\n        const unauthorizedCount = fallback.filter((d) => d.unauthorized).length;\n        if (unauthorizedCount === 0) {\n          const randomUnauthorized = generateRandomDrones(5, true);\n          fallback = fallback.concat(randomUnauthorized);\n        }\n        setDroneData(fallback);\n        setLastUpdated(new Date().toLocaleTimeString());\n      }\n    };\n\n    // Fetch restricted zones from the server\n    const fetchRestrictedZones = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/restricted-zones\");\n        const data = await response.json();\n        setRestrictedZones(data.restricted_zones || []);\n      } catch (error) {\n        console.error(\"Error fetching restricted zones:\", error);\n        setRestrictedZones([]);\n      }\n    };\n\n    // Initial data fetches\n    fetchDroneData();\n    fetchRestrictedZones();\n\n    // Set up WebSocket connection for live updates\n    socketRef.current = new WebSocket(\"ws://127.0.0.1:8000/ws\");\n    socketRef.current.onopen = () => {\n      console.log(\"✅ WebSocket Connected\");\n    };\n    socketRef.current.onmessage = (event) => {\n      try {\n        const receivedData = JSON.parse(event.data);\n        if (receivedData.drones && Array.isArray(receivedData.drones)) {\n          let updatedDrones = receivedData.drones;\n          const unauthorizedCount = updatedDrones.filter((d) => d.unauthorized).length;\n          if (unauthorizedCount === 0) {\n            const randomUnauthorized = generateRandomDrones(5, true);\n            updatedDrones = updatedDrones.concat(randomUnauthorized);\n          }\n          setDroneData(updatedDrones);\n          setLastUpdated(new Date().toLocaleTimeString());\n        } else {\n          console.warn(\"⚠️ Unexpected WebSocket Data Format:\", receivedData);\n        }\n      } catch (error) {\n        console.error(\"❌ WebSocket Error Parsing Data:\", event.data);\n      }\n    };\n    socketRef.current.onerror = (error) => {\n      console.error(\"❌ WebSocket Error:\", error);\n    };\n    socketRef.current.onclose = () => {\n      console.warn(\"⚠️ WebSocket Disconnected. Reconnecting...\");\n      setTimeout(() => {\n        socketRef.current = new WebSocket(\"ws://127.0.0.1:8000/ws\");\n      }, 10000);\n    };\n\n    // Cleanup on unmount\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.close();\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>Airspace Security Monitor</h1>\n      {/* Pass unified data to child components */}\n      <DroneMap\n        droneData={droneData}\n        restrictedZones={restrictedZones}\n        lastUpdated={lastUpdated}\n      />\n      <DroneUpdates droneData={droneData} lastUpdated={lastUpdated} />\n      <DroneValidation droneData={droneData} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}